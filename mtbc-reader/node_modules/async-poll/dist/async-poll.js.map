{"version":3,"file":"async-poll.js","sources":["../src/async-poll.ts"],"sourcesContent":["interface AsyncPollOptions {\n  interval: number;\n  timeout: number;\n}\n\nconst delay = async (t: number) => new Promise(yay => t < 1 ? yay() : setTimeout(yay, t));\n\nexport async function asyncPoll<T>(\n  fn: () => Promise<T>,\n  conditionFn: (d: T) => boolean,\n  options: AsyncPollOptions\n) {\n  const { interval, timeout }: AsyncPollOptions = options || {};\n\n  if (typeof interval !== 'number' || interval < 0) {\n    throw new TypeError(`Expected 'interval' to be a valid number, but received '${interval}'`);\n  }\n\n  if (typeof timeout !== 'number') {\n    throw new TypeError(`Expected 'timeout' to be a valid number, but received '${timeout}'`);\n  }\n\n  try {\n    const perf = window.performance;\n    const itv = +interval;\n    const maxItv = +timeout;\n    const isForever = timeout < 1;\n    let d: T;\n    let op = 0;\n    let ed = 0;\n    let duration = 0;\n    let i = 0;\n    let shouldContinuePolling = false;\n\n    perf.mark('poll starts');\n    do {\n      op = (perf.mark(`poll ${i} starts`), perf.now());\n      d = await fn();\n      ed = (perf.mark(`poll ${i} ends`), perf.now());\n\n      const diff = Math.ceil(ed - op);\n\n      shouldContinuePolling = isForever ? true : duration < maxItv && !conditionFn(d);\n      duration += diff > itv ? diff : itv;\n      perf.measure(`poll ${i} takes`, `poll ${i} starts`, `poll ${i} ends`);\n\n      /** NOTE: Fast return */\n      if (!shouldContinuePolling) break;\n\n      await delay(itv - diff);\n      perf.mark('next poll starts');\n      perf.measure(`poll ${i + 1} starts after`, `poll ${i} ends`, 'next poll starts');\n      i += 1;\n    } while (shouldContinuePolling);\n    perf.mark('poll ends');\n    perf.measure('poll spent', 'poll starts', 'poll ends');\n\n    return d;\n  } catch (e) {\n    throw e;\n  }\n}\n\nexport default asyncPoll;\n"],"names":["delay","async","t","Promise","yay","setTimeout","asyncPoll","fn","conditionFn","options","interval","timeout","TypeError","perf","window","performance","itv","maxItv","isForever","d","op","ed","duration","i","shouldContinuePolling","mark","now","diff","Math","ceil","measure","e"],"mappings":"AAKA,MAAMA,EAAQC,MAAOC,GAAc,IAAIC,QAAQC,GAAOF,EAAI,EAAIE,IAAQC,WAAWD,EAAKF,IAEtFD,eAAsBK,EACpBC,EACAC,EACAC,GAEA,MAAMC,SAAEA,EAAQC,QAAEA,GAA8BF,GAAW,GAE3D,GAAwB,iBAAbC,GAAyBA,EAAW,EAC7C,MAAM,IAAIE,qEAAqEF,MAGjF,GAAuB,iBAAZC,EACT,MAAM,IAAIC,oEAAoED,MAGhF,IACE,MAAME,EAAOC,OAAOC,YACdC,GAAON,EACPO,GAAUN,EACVO,EAAYP,EAAU,EAC5B,IAAIQ,EACAC,EAAK,EACLC,EAAK,EACLC,EAAW,EACXC,EAAI,EACJC,GAAwB,EAE5BX,EAAKY,KAAK,eACV,EAAG,CACKZ,EAAKY,aAAaF,YAAxBH,EAAqCP,EAAKa,MAC1CP,QAAUZ,IACJM,EAAKY,aAAaF,UAAxBF,EAAmCR,EAAKa,MAExC,MAAMC,EAAOC,KAAKC,KAAKR,EAAKD,GAO5B,GALAI,IAAwBN,GAAmBI,EAAWL,IAAWT,EAAYW,GAC7EG,GAAYK,EAAOX,EAAMW,EAAOX,EAChCH,EAAKiB,gBAAgBP,kBAAmBA,mBAAoBA,WAGvDC,EAAuB,YAEtBxB,EAAMgB,EAAMW,GAClBd,EAAKY,KAAK,oBACVZ,EAAKiB,gBAAgBP,EAAI,yBAA0BA,SAAU,oBAC7DA,GAAK,QACEC,GAIT,OAHAX,EAAKY,KAAK,aACVZ,EAAKiB,QAAQ,aAAc,cAAe,aAEnCX,EACP,MAAOY,GACP,MAAMA"}